/*
* generated by Xtext
*/
grammar InternalExSchema;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package fr.imag.exschema.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.imag.exschema.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import fr.imag.exschema.xtext.services.ExSchemaGrammarAccess;

}

@parser::members {
 
 	private ExSchemaGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ExSchemaGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSchema
entryRuleSchema 
:
{ before(grammarAccess.getSchemaRule()); }
	 ruleSchema
{ after(grammarAccess.getSchemaRule()); } 
	 EOF 
;

// Rule Schema
ruleSchema
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSchemaAccess().getGroup()); }
(rule__Schema__Group__0)
{ after(grammarAccess.getSchemaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getAlternatives()); }
(rule__Entity__Alternatives)
{ after(grammarAccess.getEntityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSet_
entryRuleSet_ 
:
{ before(grammarAccess.getSet_Rule()); }
	 ruleSet_
{ after(grammarAccess.getSet_Rule()); } 
	 EOF 
;

// Rule Set_
ruleSet_
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSet_Access().getGroup()); }
(rule__Set___Group__0)
{ after(grammarAccess.getSet_Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStruct_
entryRuleStruct_ 
:
{ before(grammarAccess.getStruct_Rule()); }
	 ruleStruct_
{ after(grammarAccess.getStruct_Rule()); } 
	 EOF 
;

// Rule Struct_
ruleStruct_
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStruct_Access().getGroup()); }
(rule__Struct___Group__0)
{ after(grammarAccess.getStruct_Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationship_
entryRuleRelationship_ 
:
{ before(grammarAccess.getRelationship_Rule()); }
	 ruleRelationship_
{ after(grammarAccess.getRelationship_Rule()); } 
	 EOF 
;

// Rule Relationship_
ruleRelationship_
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationship_Access().getGroup()); }
(rule__Relationship___Group__0)
{ after(grammarAccess.getRelationship_Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getGroup()); }
(rule__Attribute__Group__0)
{ after(grammarAccess.getAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Entity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getSet_ParserRuleCall_0()); }
	ruleSet_
{ after(grammarAccess.getEntityAccess().getSet_ParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEntityAccess().getStruct_ParserRuleCall_1()); }
	ruleStruct_
{ after(grammarAccess.getEntityAccess().getStruct_ParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEntityAccess().getRelationship_ParserRuleCall_2()); }
	ruleRelationship_
{ after(grammarAccess.getEntityAccess().getRelationship_ParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Schema__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Schema__Group__0__Impl
	rule__Schema__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getGroup_0()); }
(rule__Schema__Group_0__0)?
{ after(grammarAccess.getSchemaAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Schema__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getEntitiesAssignment_1()); }
(rule__Schema__EntitiesAssignment_1)*
{ after(grammarAccess.getSchemaAccess().getEntitiesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Schema__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Schema__Group_0__0__Impl
	rule__Schema__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getLeftSquareBracketKeyword_0_0()); }

	'[' 

{ after(grammarAccess.getSchemaAccess().getLeftSquareBracketKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Schema__Group_0__1__Impl
	rule__Schema__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getAttributesAssignment_0_1()); }
(rule__Schema__AttributesAssignment_0_1)*
{ after(grammarAccess.getSchemaAccess().getAttributesAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Schema__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getRightSquareBracketKeyword_0_2()); }

	']' 

{ after(grammarAccess.getSchemaAccess().getRightSquareBracketKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Set___Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set___Group__0__Impl
	rule__Set___Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Set___Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_Access().getSetKeyword_0()); }

	'Set' 

{ after(grammarAccess.getSet_Access().getSetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set___Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set___Group__1__Impl
	rule__Set___Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Set___Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_Access().getNameAssignment_1()); }
(rule__Set___NameAssignment_1)
{ after(grammarAccess.getSet_Access().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set___Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set___Group__2__Impl
	rule__Set___Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Set___Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_Access().getGroup_2()); }
(rule__Set___Group_2__0)?
{ after(grammarAccess.getSet_Access().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set___Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set___Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Set___Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_Access().getGroup_3()); }
(rule__Set___Group_3__0)?
{ after(grammarAccess.getSet_Access().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Set___Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set___Group_2__0__Impl
	rule__Set___Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Set___Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_Access().getLeftSquareBracketKeyword_2_0()); }

	'[' 

{ after(grammarAccess.getSet_Access().getLeftSquareBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set___Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set___Group_2__1__Impl
	rule__Set___Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Set___Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_Access().getAttributesAssignment_2_1()); }
(rule__Set___AttributesAssignment_2_1)*
{ after(grammarAccess.getSet_Access().getAttributesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set___Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set___Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Set___Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_Access().getRightSquareBracketKeyword_2_2()); }

	']' 

{ after(grammarAccess.getSet_Access().getRightSquareBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Set___Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set___Group_3__0__Impl
	rule__Set___Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Set___Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_Access().getLeftCurlyBracketKeyword_3_0()); }

	'{' 

{ after(grammarAccess.getSet_Access().getLeftCurlyBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set___Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set___Group_3__1__Impl
	rule__Set___Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Set___Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_Access().getEntitiesAssignment_3_1()); }
(rule__Set___EntitiesAssignment_3_1)*
{ after(grammarAccess.getSet_Access().getEntitiesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set___Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set___Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Set___Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_Access().getRightCurlyBracketKeyword_3_2()); }

	'}' 

{ after(grammarAccess.getSet_Access().getRightCurlyBracketKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Struct___Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct___Group__0__Impl
	rule__Struct___Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct___Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStruct_Access().getStructKeyword_0()); }

	'Struct' 

{ after(grammarAccess.getStruct_Access().getStructKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Struct___Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct___Group__1__Impl
	rule__Struct___Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct___Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStruct_Access().getNameAssignment_1()); }
(rule__Struct___NameAssignment_1)
{ after(grammarAccess.getStruct_Access().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Struct___Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct___Group__2__Impl
	rule__Struct___Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct___Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStruct_Access().getGroup_2()); }
(rule__Struct___Group_2__0)?
{ after(grammarAccess.getStruct_Access().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Struct___Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct___Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct___Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStruct_Access().getGroup_3()); }
(rule__Struct___Group_3__0)?
{ after(grammarAccess.getStruct_Access().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Struct___Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct___Group_2__0__Impl
	rule__Struct___Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct___Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStruct_Access().getLeftSquareBracketKeyword_2_0()); }

	'[' 

{ after(grammarAccess.getStruct_Access().getLeftSquareBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Struct___Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct___Group_2__1__Impl
	rule__Struct___Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct___Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStruct_Access().getAttributesAssignment_2_1()); }
(rule__Struct___AttributesAssignment_2_1)*
{ after(grammarAccess.getStruct_Access().getAttributesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Struct___Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct___Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct___Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStruct_Access().getRightSquareBracketKeyword_2_2()); }

	']' 

{ after(grammarAccess.getStruct_Access().getRightSquareBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Struct___Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct___Group_3__0__Impl
	rule__Struct___Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct___Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStruct_Access().getLeftCurlyBracketKeyword_3_0()); }

	'{' 

{ after(grammarAccess.getStruct_Access().getLeftCurlyBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Struct___Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct___Group_3__1__Impl
	rule__Struct___Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct___Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStruct_Access().getEntitiesAssignment_3_1()); }
(rule__Struct___EntitiesAssignment_3_1)*
{ after(grammarAccess.getStruct_Access().getEntitiesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Struct___Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct___Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct___Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStruct_Access().getRightCurlyBracketKeyword_3_2()); }

	'}' 

{ after(grammarAccess.getStruct_Access().getRightCurlyBracketKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Relationship___Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship___Group__0__Impl
	rule__Relationship___Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship___Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationship_Access().getRelationshipKeyword_0()); }

	'Relationship' 

{ after(grammarAccess.getRelationship_Access().getRelationshipKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship___Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship___Group__1__Impl
	rule__Relationship___Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship___Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationship_Access().getNameAssignment_1()); }
(rule__Relationship___NameAssignment_1)
{ after(grammarAccess.getRelationship_Access().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship___Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship___Group__2__Impl
	rule__Relationship___Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship___Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationship_Access().getGroup_2()); }
(rule__Relationship___Group_2__0)?
{ after(grammarAccess.getRelationship_Access().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship___Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship___Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship___Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationship_Access().getGroup_3()); }
(rule__Relationship___Group_3__0)?
{ after(grammarAccess.getRelationship_Access().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Relationship___Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship___Group_2__0__Impl
	rule__Relationship___Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship___Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationship_Access().getLeftSquareBracketKeyword_2_0()); }

	'[' 

{ after(grammarAccess.getRelationship_Access().getLeftSquareBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship___Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship___Group_2__1__Impl
	rule__Relationship___Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship___Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationship_Access().getAttributesAssignment_2_1()); }
(rule__Relationship___AttributesAssignment_2_1)*
{ after(grammarAccess.getRelationship_Access().getAttributesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship___Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship___Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship___Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationship_Access().getRightSquareBracketKeyword_2_2()); }

	']' 

{ after(grammarAccess.getRelationship_Access().getRightSquareBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Relationship___Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship___Group_3__0__Impl
	rule__Relationship___Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship___Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationship_Access().getLeftCurlyBracketKeyword_3_0()); }

	'{' 

{ after(grammarAccess.getRelationship_Access().getLeftCurlyBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship___Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship___Group_3__1__Impl
	rule__Relationship___Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship___Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationship_Access().getStartKeyword_3_1()); }

	'start' 

{ after(grammarAccess.getRelationship_Access().getStartKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship___Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship___Group_3__2__Impl
	rule__Relationship___Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship___Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationship_Access().getEqualsSignKeyword_3_2()); }

	'=' 

{ after(grammarAccess.getRelationship_Access().getEqualsSignKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship___Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship___Group_3__3__Impl
	rule__Relationship___Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship___Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationship_Access().getStartAssignment_3_3()); }
(rule__Relationship___StartAssignment_3_3)
{ after(grammarAccess.getRelationship_Access().getStartAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship___Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship___Group_3__4__Impl
	rule__Relationship___Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship___Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationship_Access().getEndKeyword_3_4()); }

	'end' 

{ after(grammarAccess.getRelationship_Access().getEndKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship___Group_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship___Group_3__5__Impl
	rule__Relationship___Group_3__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship___Group_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationship_Access().getEqualsSignKeyword_3_5()); }

	'=' 

{ after(grammarAccess.getRelationship_Access().getEqualsSignKeyword_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship___Group_3__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship___Group_3__6__Impl
	rule__Relationship___Group_3__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship___Group_3__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationship_Access().getEndAssignment_3_6()); }
(rule__Relationship___EndAssignment_3_6)
{ after(grammarAccess.getRelationship_Access().getEndAssignment_3_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship___Group_3__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship___Group_3__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship___Group_3__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationship_Access().getRightCurlyBracketKeyword_3_7()); }

	'}' 

{ after(grammarAccess.getRelationship_Access().getRightCurlyBracketKeyword_3_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
(rule__Attribute__NameAssignment_0)
{ after(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAttributeAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getValueAssignment_2()); }
(rule__Attribute__ValueAssignment_2)
{ after(grammarAccess.getAttributeAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Schema__AttributesAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getAttributesAttributeParserRuleCall_0_1_0()); }
	ruleAttribute{ after(grammarAccess.getSchemaAccess().getAttributesAttributeParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__EntitiesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getEntitiesEntityParserRuleCall_1_0()); }
	ruleEntity{ after(grammarAccess.getSchemaAccess().getEntitiesEntityParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Set___NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_Access().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSet_Access().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Set___AttributesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_Access().getAttributesAttributeParserRuleCall_2_1_0()); }
	ruleAttribute{ after(grammarAccess.getSet_Access().getAttributesAttributeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Set___EntitiesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_Access().getEntitiesEntityParserRuleCall_3_1_0()); }
	ruleEntity{ after(grammarAccess.getSet_Access().getEntitiesEntityParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Struct___NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStruct_Access().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStruct_Access().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Struct___AttributesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStruct_Access().getAttributesAttributeParserRuleCall_2_1_0()); }
	ruleAttribute{ after(grammarAccess.getStruct_Access().getAttributesAttributeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Struct___EntitiesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStruct_Access().getEntitiesEntityParserRuleCall_3_1_0()); }
	ruleEntity{ after(grammarAccess.getStruct_Access().getEntitiesEntityParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship___NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationship_Access().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRelationship_Access().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship___AttributesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationship_Access().getAttributesAttributeParserRuleCall_2_1_0()); }
	ruleAttribute{ after(grammarAccess.getRelationship_Access().getAttributesAttributeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship___StartAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationship_Access().getStartEntityParserRuleCall_3_3_0()); }
	ruleEntity{ after(grammarAccess.getRelationship_Access().getStartEntityParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship___EndAssignment_3_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationship_Access().getEndEntityParserRuleCall_3_6_0()); }
	ruleEntity{ after(grammarAccess.getRelationship_Access().getEndEntityParserRuleCall_3_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getAttributeAccess().getValueSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


